#include <base/core/string/StringConverter.h>
#include <base/core/arch/Platform.h>
#include <benchmark/benchmark.h>

using namespace base;

static const auto stringl6000= std::string("Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3");
static const auto stringl1200 = std::string("Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3");

static const auto widestringl6000 = std::string("Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3");
static const auto widestringl1200 = std::string("Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3Hello world aphHello world aphHello world aphHello world aphr2f3");

template <
    typename _FromChar_,
    typename _ToChar_>
class CRTStringConverterBenchmark {
    static void ConvertStringHelper(const _FromChar_* input, size_t length, _ToChar_* buffer) {
        mbstowcs(buffer, input, length);
    }

public:
    static void ConvertString(benchmark::State& state) {
        _ToChar_* ch = static_cast<_ToChar_*>(memory::AllocateAligned(stringl1200.size() * sizeof(_ToChar_), 64));

        for (auto _ : state) {
            ConvertStringHelper(stringl1200.data(), stringl1200.size(), ch);
        }
    }
};

template <
    typename _FromChar_,
    typename _ToChar_>
class StringConverterBenchmark {
    static void ConvertStringHelper(const _FromChar_* input, size_t length, string::StringConversionResult<_ToChar_>& result) {
        string::StringConverter<>::convertStringStore<_FromChar_, _ToChar_>(input, length, &result);
    }

public:
    static void ConvertString(benchmark::State& state) {
        string::StringConversionResult<_ToChar_> result;
        result.setData(static_cast<_ToChar_*>(memory::AllocateAligned(stringl1200.size() * sizeof(_ToChar_), 64)));

        for (auto _ : state) {
            ConvertStringHelper(stringl1200.data(), stringl1200.size(), result);
        }
    }
};

BENCHMARK(StringConverterBenchmark<char, wchar_t>::ConvertString)
    ->Unit(benchmark::kMillisecond);

BENCHMARK(CRTStringConverterBenchmark<char, wchar_t>::ConvertString)
    ->Unit(benchmark::kMillisecond);

// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================
// ========================================================================================

int main(int argc, char** argv) {
    benchmark::MaybeReenterWithoutASLR(argc, argv);
    char arg0_default[] = "benchmark"; 

    char* args_default = reinterpret_cast<char*>(arg0_default); 

    if (!argv) {
        argc = 1; argv = &args_default;
    } 

    ::benchmark::Initialize(&argc, argv);
    if (::benchmark::ReportUnrecognizedArguments(argc, argv))
        return 1;
    
    ::benchmark::RunSpecifiedBenchmarks(); 
    ::benchmark::Shutdown();
    
    return 0;
}